
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import org.apache.commons.io.FileUtils;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.net.ssl.HttpsURLConnection;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * A programmal
 * 1.) letöltjük a DEVIZA_URL címről megadott aktuális, naprakész (ennek sikertelensége miatt helyi könyvtárból választjuk ki
 * a korábban - emiatt nem feltétlenül naprakész - manuálisan letöltött) deviza árfolyamokat tartalmaző XML fájlt;
 * 2.) megnyitjuk, azaz az adatai alapján feltöltjük a képernyőn látható értéklistát;
 * 3.) végül az értéklista kiválasztott sora alapján kiszámoljuk a forintra átváltott értékét.
 */
public class Devizavalto extends javax.swing.JFrame {
    
    private static final String DEVIZA_URL = "https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml";
    
    public File valasztottMappa;
    
    public XMLFeldolgoz arfolyam = new XMLFeldolgoz();
    
    //public List<String> arfolyamtomb = new ArrayList<>();

    /**
     * Creates new form Devizavalto
     */
    public Devizavalto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jErtekLista = new javax.swing.JComboBox<>();
        jGombMegnyit = new javax.swing.JButton();
        jButtonCelkonyvtar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        buttonHelyikonyvtar = new java.awt.Button();
        jHibakijelzes = new javax.swing.JTextField();
        jDevizaOsszeg = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jForintOsszeg = new javax.swing.JFormattedTextField();
        jButtonAtvalt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jErtekLista.setEnabled(false);

        jGombMegnyit.setText("XML megnyitás");
        jGombMegnyit.setEnabled(false);
        jGombMegnyit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGombMegnyitActionPerformed(evt);
            }
        });

        jButtonCelkonyvtar.setText("Letöltési könyvtár megadása...");
        jButtonCelkonyvtar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCelkonyvtarActionPerformed(evt);
            }
        });

        jLabel1.setText("Aktuális devizaárfolyamok helye: https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml");

        buttonHelyikonyvtar.setEnabled(false);
        buttonHelyikonyvtar.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        buttonHelyikonyvtar.setLabel("XML fájl kiválasztása lokális könyvtárból...");
        buttonHelyikonyvtar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHelyikonyvtarActionPerformed(evt);
            }
        });

        jHibakijelzes.setEditable(false);
        jHibakijelzes.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jDevizaOsszeg.setEditable(false);
        jDevizaOsszeg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jDevizaOsszeg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDevizaOsszeg.setEnabled(false);

        jLabel2.setText("Adja meg az átváltandó összeget a kiválasztott devizában:");

        jForintOsszeg.setEditable(false);
        jForintOsszeg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        jForintOsszeg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jButtonAtvalt.setText("Átváltás forintra...");
        jButtonAtvalt.setEnabled(false);
        jButtonAtvalt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtvaltActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jHibakijelzes)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCelkonyvtar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonHelyikonyvtar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jErtekLista, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jGombMegnyit, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAtvalt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jForintOsszeg, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(jDevizaOsszeg))))
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jButtonCelkonyvtar)
                .addGap(27, 27, 27)
                .addComponent(jHibakijelzes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(buttonHelyikonyvtar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jErtekLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jGombMegnyit))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDevizaOsszeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jForintOsszeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAtvalt))
                .addContainerGap(138, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jGombMegnyitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGombMegnyitActionPerformed
        /*Az XML fájl megnyitása, amelyet vagy közvetlenül az url-ről töltöttünk le egy általunk választott könyvtárba,
        * vagy annak sikertelensége miatt egy lokális könyvtárból választottunk ki.
        * A megnyitott fájlból töltjük fel a képernyőn látható jErtekLista értéklistát.
        * Sikeres megnyitás után elérhetővé tesszük a számolásra szolgáló objektumokat.
        * (Addig ugyanis nincs értelme, amíg nem áll minden szükséges adat a rendelkezésünkre.)
        */
        List<String> arfolyamtomb;
        try {
            arfolyamtomb = arfolyam.getArfolyamlista(arfolyam.getFajl());
            for (String a : arfolyamtomb) {
                jErtekLista.addItem(a);
                
            }
            jErtekLista.setEnabled(true);
            jDevizaOsszeg.setEnabled(true);
            jDevizaOsszeg.setEditable(true);
            jButtonAtvalt.setEnabled(true);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(Devizavalto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Devizavalto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(Devizavalto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jGombMegnyitActionPerformed

    @SuppressWarnings("empty-statement")
    private void jButtonCelkonyvtarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCelkonyvtarActionPerformed
        //Célkönyvtár megadása, ahová letöltjük az XML fájlt.
        JFileChooser konyvtarvalaszt = new JFileChooser();
        konyvtarvalaszt.setCurrentDirectory(new java.io.File(".")); //Az aktuális könyvtárból indulunk ki.
        konyvtarvalaszt.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int ellenorzes = konyvtarvalaszt.showSaveDialog(this);
        if (ellenorzes == JFileChooser.APPROVE_OPTION) {
            valasztottMappa = konyvtarvalaszt.getSelectedFile();
            //System.out.println(valasztottMappa.getAbsolutePath()); //Debug...
            File utvonal = new File(valasztottMappa.getAbsolutePath());
            File fajl    = new File(utvonal, "arfolyamok.xml");
            
            URL url = null;
            try {
                new CertificatValidator(); //Ez a sor biztosítja, hogy a kincstári tűzfal elfogadja a megadott url-ről származó fájl, s ne fusson kivételre.
                url = new URL(DEVIZA_URL);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Devizavalto.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Devizavalto.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                FileUtils.copyURLToFile(url, fajl.getAbsoluteFile());
                //System.out.println(fajl.getAbsoluteFile()); //Debug...
                arfolyam.setFajlnev(fajl.getAbsoluteFile());
                jHibakijelzes.setText("Az aktuális árfolyamokat tartalmazó XML fájl letöltése sikeresen megtörtént!");
                jGombMegnyit.setEnabled(true);
            } catch (IOException ex) {
                /*
                * Amennyiben nem sikerül a programmal letölteni az XML fájlt, akkor manuálisan töltsük le egy általunk kiválasztott könyvtárba.
                */
                Logger.getLogger(Devizavalto.class.getName()).log(Level.SEVERE, null, ex);
                jHibakijelzes.setText("Az XML fájl letöltése a hálózati beállítások miatt nem sikerült...");
                buttonHelyikonyvtar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jButtonCelkonyvtarActionPerformed

    private void buttonHelyikonyvtarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHelyikonyvtarActionPerformed
        //A gépünkre az előzőleg manuálisan letöltt XML fájlt itt tudjuk kiválasztani.
        JFileChooser fajlvalaszt = new JFileChooser();
        fajlvalaszt.showOpenDialog(null);
        File fajl = fajlvalaszt.getSelectedFile();
        arfolyam.setFajlnev(fajl);
        if ((arfolyam.getFajlnev() != null) && !(arfolyam.getFajlnev().isEmpty())) {
            jHibakijelzes.setText("Az XML kiválasztása a helyi gépről megtörtént!");
            jButtonCelkonyvtar.setEnabled(false);
            jGombMegnyit.setEnabled(true);
        }
    }//GEN-LAST:event_buttonHelyikonyvtarActionPerformed

    private void jButtonAtvaltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtvaltActionPerformed
        //A kiválasztott deviza és az abban megadott összegből itt számoljuk át forintra.
        float kivalasztott;
        float mennyit;
        float forintban;
        if ((jErtekLista.getSelectedItem() != null)              &&
           !(jErtekLista.getSelectedItem().toString().isEmpty()) &&
            (jDevizaOsszeg.getText() != null)                    &&
           !(jDevizaOsszeg.getText().isEmpty())) {           
            kivalasztott  = Float.valueOf(jErtekLista.getSelectedItem().toString().substring(jErtekLista.getSelectedItem().toString().indexOf("-") + 2));
            mennyit       = Float.valueOf(jDevizaOsszeg.getText());
            forintban     = mennyit / kivalasztott * arfolyam.getHanyFt1EUR();
            jForintOsszeg.setText(String.valueOf(forintban));            
        }
    }//GEN-LAST:event_jButtonAtvaltActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Devizavalto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Devizavalto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Devizavalto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Devizavalto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Devizavalto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button buttonHelyikonyvtar;
    private javax.swing.JButton jButtonAtvalt;
    private javax.swing.JButton jButtonCelkonyvtar;
    private javax.swing.JFormattedTextField jDevizaOsszeg;
    private javax.swing.JComboBox<String> jErtekLista;
    private javax.swing.JFormattedTextField jForintOsszeg;
    private javax.swing.JButton jGombMegnyit;
    private javax.swing.JTextField jHibakijelzes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
